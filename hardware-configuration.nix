# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ./hardware/legion
  ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "thunderbolt"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # FIX: amdgpu regression for linux 6.10
  # https://gitlab.freedesktop.org/drm/amd/-/issues/3528
  # boot.kernelPackages = pkgs.linuxPackages_xanmod_latest;

  # use LTS until above regression is fixed
  # boot.kernelPackages = pkgs.linuxPackages_xanmod;

  # WIP: testing latest xanmod kernel (includes amdgpu fix)
  # https://github.com/xanmod/linux/releases/tag/6.11.0-xanmod1
  boot.kernelPackages = pkgs.linuxPackagesFor (
    pkgs.linux_xanmod.override {
      argsOverride = rec {
        version = "6.11.0";
        modDirVersion = "${version}-xanmod1";

        src = pkgs.fetchFromGitHub {
          owner = "xanmod";
          repo = "linux";
          rev = modDirVersion;
          hash = "sha256-cMT7xqDAwzuJsKSrqdCP+brIrCxgxQ/4fttFxbFiDNI=";
        };
      };
    }
  );

  # Custom kernel for `sched_ext`
  # 
  # The patches will probably be merged into linux 6.12.
  # Could be fun to play around with until then.
  # ---
  # https://github.com/sched-ext/scx
  # https://github.com/chaotic-cx/nyx?tab=readme-ov-file#using-linux-cachyos-with-sched-ext
  # boot.kernelPackages = pkgs.linuxPackages_cachyos;
  # chaotic.scx.enable = true; # by default uses scx_rustland scheduler

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
